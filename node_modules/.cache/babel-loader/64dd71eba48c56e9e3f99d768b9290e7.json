{"ast":null,"code":"var _jsxFileName = \"/media/credian/d05e4630-b6fb-4cec-b464-e011d52fc682/Job/Clerc_frontend/clerc/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport { Provider } from 'react-redux'; // already written HOC to simplify work between react and redux\n\nimport reducer from './reducers';\nimport App from './components/app';\nimport thunk from 'redux-thunk'; // init new redux-store with already created reducer\n// to pass enhancer and applyMiddleWare and ... - manualy we oughta create single function\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst composedParams = compose(window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__(), applyMiddleware(thunk));\nconst store = createStore(reducer, composedParams);\n/* \n  2-nd param - for redux plugin\n  thunk - for accessing redux-store`s data via functions (situated in ./actions due redux paradigm)\n*/\n\nReactDOM.render( /*#__PURE__*/_jsxDEV(Provider, {\n  store: store,\n  children: /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 26,\n  columnNumber: 3\n}, this), document.getElementById('root'));","map":{"version":3,"names":["React","ReactDOM","createStore","applyMiddleware","compose","Provider","reducer","App","thunk","composedParams","window","__REDUX_DEVTOOLS_EXTENSION__","store","render","document","getElementById"],"sources":["/media/credian/d05e4630-b6fb-4cec-b464-e011d52fc682/Job/Clerc_frontend/clerc/src/index.js"],"sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport { Provider } from 'react-redux';     // already written HOC to simplify work between react and redux\nimport reducer from './reducers';\nimport App from './components/app';\nimport thunk from 'redux-thunk';\n\n// init new redux-store with already created reducer\n\n\n// to pass enhancer and applyMiddleWare and ... - manualy we oughta create single function\nconst composedParams = compose(  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__(),\n                                 applyMiddleware(thunk))\n\nconst store = createStore(\n  reducer,\n  composedParams\n  );  \n\n  /* \n    2-nd param - for redux plugin\n    thunk - for accessing redux-store`s data via functions (situated in ./actions due redux paradigm)\n  */       \nReactDOM.render(\n  <Provider store={store}>\n    <App/>\n  </Provider>,\n  document.getElementById('root'));\n\n"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,SAASC,WAAT,EAAsBC,eAAtB,EAAuCC,OAAvC,QAAsD,OAAtD;AACA,SAASC,QAAT,QAAyB,aAAzB,C,CAA4C;;AAC5C,OAAOC,OAAP,MAAoB,YAApB;AACA,OAAOC,GAAP,MAAgB,kBAAhB;AACA,OAAOC,KAAP,MAAkB,aAAlB,C,CAEA;AAGA;;;AACA,MAAMC,cAAc,GAAGL,OAAO,CAAGM,MAAM,CAACC,4BAAP,IAAuCD,MAAM,CAACC,4BAAP,EAA1C,EACGR,eAAe,CAACK,KAAD,CADlB,CAA9B;AAGA,MAAMI,KAAK,GAAGV,WAAW,CACvBI,OADuB,EAEvBG,cAFuB,CAAzB;AAKE;AACF;AACA;AACA;;AACAR,QAAQ,CAACY,MAAT,eACE,QAAC,QAAD;EAAU,KAAK,EAAED,KAAjB;EAAA,uBACE,QAAC,GAAD;IAAA;IAAA;IAAA;EAAA;AADF;EAAA;EAAA;EAAA;AAAA,QADF,EAIEE,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAJF"},"metadata":{},"sourceType":"module"}