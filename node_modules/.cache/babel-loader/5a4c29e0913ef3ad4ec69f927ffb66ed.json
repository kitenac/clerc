{"ast":null,"code":"const updateLoginData = (state, action) => {\n  console.log('action is ', action);\n  if (state === undefined) return {\n    username: '',\n    password: '',\n    client_id: '',\n    client_secret: '',\n    grant_type: ''\n  }; // for destructoring action.payload must be not undefined - that`s why we declaired action = { payload: {}}\n\n  const {\n    username,\n    password,\n    client_id,\n    client_secret,\n    grant_type\n  } = action.payload;\n\n  switch (action.type) {\n    case 'INPUT_USER':\n      return { ...state,\n        username\n      };\n\n    case 'INPUT_PSWD':\n      return { ...state,\n        password\n      };\n\n    case 'INPUT_REST':\n      return { ...state,\n        client_id,\n        client_secret,\n        grant_type\n      };\n    // TODO: 1) remove to ../services - bc LOGIN makes no change on storage - just \"side effect\"\n    //       2) mb not to create FormData each api-call \n\n    case 'LOGIN':\n      let formdata = new FormData();\n      formdata.append(\"username\", username);\n      formdata.append(\"password\", password);\n      formdata.append(\"client_id\", client_id);\n      formdata.append(\"client_secret\", client_secret);\n      formdata.append(\"grant_type\", grant_type);\n      let requestOptions = {\n        method: 'POST',\n        body: formdata,\n        redirect: 'follow'\n      };\n      return fetch(\"http://server.clerc.ru/api/v2.0/auth/login\", requestOptions).then(response => response.text()).then(result => console.log('on login response', result)).catch(error => console.log('error', error));\n\n    default:\n      return state;\n  }\n};\n\nexport default updateLoginData;","map":{"version":3,"names":["updateLoginData","state","action","console","log","undefined","username","password","client_id","client_secret","grant_type","payload","type","formdata","FormData","append","requestOptions","method","body","redirect","fetch","then","response","text","result","catch","error"],"sources":["/media/credian/d05e4630-b6fb-4cec-b464-e011d52fc682/Job/Clerc_frontend/clerc/src/reducers/login-form.js"],"sourcesContent":["\n\nconst updateLoginData = (state, action) => {\n    console.log('action is ', action);\n\n    if (state === undefined )\n        return{\n            username: '',\n            password: '',\n            client_id: '', \n            client_secret: '',\n            grant_type: '' }\n    \n    // for destructoring action.payload must be not undefined - that`s why we declaired action = { payload: {}}\n    const {\n            username,\n            password,\n            client_id, \n            client_secret,\n            grant_type }   = action.payload\n  \n            \n    switch (action.type) {\n\n      case 'INPUT_USER':\n        return { ...state,  username }\n  \n      case 'INPUT_PSWD':\n        return { ...state, password }\n\n      case 'INPUT_REST':\n        return { \n                  ...state, \n                  client_id, \n                  client_secret, \n                  grant_type    }  \n\n\n      // TODO: 1) remove to ../services - bc LOGIN makes no change on storage - just \"side effect\"\n      //       2) mb not to create FormData each api-call \n      case 'LOGIN':\n        let formdata = new FormData()\n        formdata.append(\"username\", username)\n        formdata.append(\"password\", password)\n        formdata.append(\"client_id\", client_id)\n        formdata.append(\"client_secret\", client_secret)\n        formdata.append(\"grant_type\", grant_type)\n      \n        let requestOptions = {\n          method: 'POST',\n          body: formdata,\n          redirect: 'follow'\n        }\n\n        return fetch(\"http://server.clerc.ru/api/v2.0/auth/login\", requestOptions)\n               .then(response => response.text())\n               .then(result => console.log('on login response',result))\n               .catch(error => console.log('error', error))\n    \n        \n      default:\n        return state\n    }\n  };\n\nexport default updateLoginData\n\n\n"],"mappings":"AAEA,MAAMA,eAAe,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;EACvCC,OAAO,CAACC,GAAR,CAAY,YAAZ,EAA0BF,MAA1B;EAEA,IAAID,KAAK,KAAKI,SAAd,EACI,OAAM;IACFC,QAAQ,EAAE,EADR;IAEFC,QAAQ,EAAE,EAFR;IAGFC,SAAS,EAAE,EAHT;IAIFC,aAAa,EAAE,EAJb;IAKFC,UAAU,EAAE;EALV,CAAN,CAJmC,CAWvC;;EACA,MAAM;IACEJ,QADF;IAEEC,QAFF;IAGEC,SAHF;IAIEC,aAJF;IAKEC;EALF,IAKmBR,MAAM,CAACS,OALhC;;EAQA,QAAQT,MAAM,CAACU,IAAf;IAEE,KAAK,YAAL;MACE,OAAO,EAAE,GAAGX,KAAL;QAAaK;MAAb,CAAP;;IAEF,KAAK,YAAL;MACE,OAAO,EAAE,GAAGL,KAAL;QAAYM;MAAZ,CAAP;;IAEF,KAAK,YAAL;MACE,OAAO,EACG,GAAGN,KADN;QAEGO,SAFH;QAGGC,aAHH;QAIGC;MAJH,CAAP;IAOF;IACA;;IACA,KAAK,OAAL;MACE,IAAIG,QAAQ,GAAG,IAAIC,QAAJ,EAAf;MACAD,QAAQ,CAACE,MAAT,CAAgB,UAAhB,EAA4BT,QAA5B;MACAO,QAAQ,CAACE,MAAT,CAAgB,UAAhB,EAA4BR,QAA5B;MACAM,QAAQ,CAACE,MAAT,CAAgB,WAAhB,EAA6BP,SAA7B;MACAK,QAAQ,CAACE,MAAT,CAAgB,eAAhB,EAAiCN,aAAjC;MACAI,QAAQ,CAACE,MAAT,CAAgB,YAAhB,EAA8BL,UAA9B;MAEA,IAAIM,cAAc,GAAG;QACnBC,MAAM,EAAE,MADW;QAEnBC,IAAI,EAAEL,QAFa;QAGnBM,QAAQ,EAAE;MAHS,CAArB;MAMA,OAAOC,KAAK,CAAC,4CAAD,EAA+CJ,cAA/C,CAAL,CACCK,IADD,CACMC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADlB,EAECF,IAFD,CAEMG,MAAM,IAAIrB,OAAO,CAACC,GAAR,CAAY,mBAAZ,EAAgCoB,MAAhC,CAFhB,EAGCC,KAHD,CAGOC,KAAK,IAAIvB,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBsB,KAArB,CAHhB,CAAP;;IAMF;MACE,OAAOzB,KAAP;EAvCJ;AAyCD,CA7DH;;AA+DA,eAAeD,eAAf"},"metadata":{},"sourceType":"module"}