{"ast":null,"code":"import { connect } from \"react-redux\"; // sending already filled form to server\n\nasync function Login() {\n  var formdata = new FormData();\n  formdata.append(\"username\", \"admin@ship.ru\");\n  formdata.append(\"password\", \"secret2\");\n  formdata.append(\"client_id\", \"1\");\n  formdata.append(\"client_secret\", \"c75IGwuqkjrO1RWCE4Ntn4zqpQdpgnEO2wGT9iMT\");\n  formdata.append(\"grant_type\", \"password\");\n  var requestOptions = {\n    method: 'POST',\n    body: formdata,\n    redirect: 'follow'\n  };\n  let res = await fetch(\"http://server.clerc.ru/api/v2.0/auth/login\", requestOptions).catch(error => console.log('error: ', error));\n  return res.text(); // !!! remember - it`s just 'promise' to be awited in different async function\n} // taking props from Redux-store\n\n\n_c = Login;\n\nconst mapStateToProps = state => {\n  const {\n    loginFormData\n  } = state;\n  return loginFormData;\n}; // ask Redux to give us(Login funtion) Store props and methods to affecr`em\n\n\nexport default connect(mapStateToProps)(Login);\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["connect","Login","formdata","FormData","append","requestOptions","method","body","redirect","res","fetch","catch","error","console","log","text","mapStateToProps","state","loginFormData"],"sources":["/media/credian/d05e4630-b6fb-4cec-b464-e011d52fc682/Job/Clerc_frontend/clerc/src/services/clerc-service.js"],"sourcesContent":["import { connect } from \"react-redux\"\n\n\n// sending already filled form to server\nasync function Login() {\n    var formdata = new FormData();\n    formdata.append(\"username\", \"admin@ship.ru\");\n    formdata.append(\"password\", \"secret2\");\n    formdata.append(\"client_id\", \"1\");\n    formdata.append(\"client_secret\", \"c75IGwuqkjrO1RWCE4Ntn4zqpQdpgnEO2wGT9iMT\");\n    formdata.append(\"grant_type\", \"password\");\n\n    var requestOptions = {\n      method: 'POST',\n      body: formdata,\n      redirect: 'follow'\n    }\n\n\n    let res = await fetch(\"http://server.clerc.ru/api/v2.0/auth/login\", requestOptions)\n                        .catch((error) => console.log('error: ', error))\n                        \n    return res.text();          // !!! remember - it`s just 'promise' to be awited in different async function\n}\n\n\n// taking props from Redux-store\nconst mapStateToProps = (state) => {\n    const {loginFormData} = state\n    return loginFormData\n}\n\n\n// ask Redux to give us(Login funtion) Store props and methods to affecr`em\n\nexport default connect(mapStateToProps)(Login)\n"],"mappings":"AAAA,SAASA,OAAT,QAAwB,aAAxB,C,CAGA;;AACA,eAAeC,KAAf,GAAuB;EACnB,IAAIC,QAAQ,GAAG,IAAIC,QAAJ,EAAf;EACAD,QAAQ,CAACE,MAAT,CAAgB,UAAhB,EAA4B,eAA5B;EACAF,QAAQ,CAACE,MAAT,CAAgB,UAAhB,EAA4B,SAA5B;EACAF,QAAQ,CAACE,MAAT,CAAgB,WAAhB,EAA6B,GAA7B;EACAF,QAAQ,CAACE,MAAT,CAAgB,eAAhB,EAAiC,0CAAjC;EACAF,QAAQ,CAACE,MAAT,CAAgB,YAAhB,EAA8B,UAA9B;EAEA,IAAIC,cAAc,GAAG;IACnBC,MAAM,EAAE,MADW;IAEnBC,IAAI,EAAEL,QAFa;IAGnBM,QAAQ,EAAE;EAHS,CAArB;EAOA,IAAIC,GAAG,GAAG,MAAMC,KAAK,CAAC,4CAAD,EAA+CL,cAA/C,CAAL,CACKM,KADL,CACYC,KAAD,IAAWC,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBF,KAAvB,CADtB,CAAhB;EAGA,OAAOH,GAAG,CAACM,IAAJ,EAAP,CAlBmB,CAkBS;AAC/B,C,CAGD;;;KAtBed,K;;AAuBf,MAAMe,eAAe,GAAIC,KAAD,IAAW;EAC/B,MAAM;IAACC;EAAD,IAAkBD,KAAxB;EACA,OAAOC,aAAP;AACH,CAHD,C,CAMA;;;AAEA,eAAelB,OAAO,CAACgB,eAAD,CAAP,CAAyBf,KAAzB,CAAf"},"metadata":{},"sourceType":"module"}