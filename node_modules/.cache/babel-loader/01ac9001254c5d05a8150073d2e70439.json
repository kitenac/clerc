{"ast":null,"code":"var _jsxFileName = \"/media/credian/d05e4630-b6fb-4cec-b464-e011d52fc682/Job/Clerc_frontend/clerc/src/components/pages/login-page.js\",\n    _this = this;\n\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { input_username, input_password, input_rest, update_token, add_contracts } from '../../actions';\nimport Login from '../../services';\nimport './login-page.css'; // \"admin@ship.ru\"   \"secret2\"\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst LoginPage = function () {\n  let {\n    input_username,\n    input_password,\n    input_rest\n  } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : loginFormData;\n  let {\n    token\n  } = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : sessionData;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"login-page\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"login-form\",\n        onChange: event => {\n          event.preventDefault(); //console.log('Input is:', event.target.value)\n\n          input_username(event.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 11\n      }, _this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"password-form\",\n        onChange: event => {\n          event.preventDefault();\n          input_password(event.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 11\n      }, _this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"submit-button\",\n        onClick: async function (event) {\n          event.preventDefault(); // **** temporary measure ****\n          // TODO: see docs to know: how to get this poles to different users \n\n          input_rest({\n            client_id: '1',\n            client_secret: 'c75IGwuqkjrO1RWCE4Ntn4zqpQdpgnEO2wGT9iMT',\n            grant_type: 'password'\n          });\n          const response = await login();\n          update_token(getApiKey(response));\n          add_contracts(await getContracts(token));\n          console.log('\\n\\ncontracts :\\n', contracts, '\\n-------------------\\n');\n        },\n        children: \"\\u0412\\u043E\\u0439\\u0442\\u0438\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 12\n  }, _this);\n};\n\n_c = LoginPage;\n\nconst mapStateToProps = state => {\n  const {\n    loginFormData,\n    sessionData\n  } = state;\n  return loginFormData;\n}; // wrapping actions into dispatch\n\n\nconst mapDispatchToProps = {\n  input_username,\n  input_password,\n  input_rest\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(LoginPage);\n\nvar _c;\n\n$RefreshReg$(_c, \"LoginPage\");","map":{"version":3,"names":["React","connect","input_username","input_password","input_rest","update_token","add_contracts","Login","LoginPage","loginFormData","token","sessionData","event","preventDefault","target","value","client_id","client_secret","grant_type","response","login","getApiKey","getContracts","console","log","contracts","mapStateToProps","state","mapDispatchToProps"],"sources":["/media/credian/d05e4630-b6fb-4cec-b464-e011d52fc682/Job/Clerc_frontend/clerc/src/components/pages/login-page.js"],"sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport { \n         input_username, \n         input_password, \n         input_rest,\n         update_token, \n         add_contracts\n         }    from '../../actions';\n\nimport Login from '../../services';\n\nimport './login-page.css';\n\n\n// \"admin@ship.ru\"   \"secret2\"\n\nconst LoginPage = ( {\n                      input_username, \n                      input_password, \n                      input_rest \n                    } = loginFormData,\n                    { token } = sessionData\n\n                  ) => {\n\n    return <div className='login-page'>\n\n        <form>\n          <input \n            className='login-form'\n            onChange={ (event) => {\n              event.preventDefault()\n              //console.log('Input is:', event.target.value)\n              input_username(event.target.value) } \n            }>\n\n          </input>\n\n          <input \n            className='password-form'\n            onChange={ (event) => {\n              event.preventDefault()\n              input_password(event.target.value) } \n            }>\n            \n          </input>\n\n          <button \n            className='submit-button'\n            onClick={ async function (event){\n                        event.preventDefault()\n\n                        // **** temporary measure ****\n                        // TODO: see docs to know: how to get this poles to different users \n                        input_rest({ \n                           client_id: '1',\n                           client_secret: 'c75IGwuqkjrO1RWCE4Ntn4zqpQdpgnEO2wGT9iMT',\n                           grant_type: 'password'})\n                        \n                        const response = await login()\n                        update_token( getApiKey(response) )\n                        add_contracts( await getContracts(token) )\n\n                        console.log('\\n\\ncontracts :\\n', contracts, '\\n-------------------\\n')\n                        \n                      } \n                    }>\n              Войти\n          </button>\n\n        </form>\n\n    </div>\n\n}\n\n\n\nconst mapStateToProps = (state) => {\n  const {loginFormData, sessionData} = state\n  return loginFormData\n}\n\n\n// wrapping actions into dispatch\nconst mapDispatchToProps = {\n  input_username, \n  input_password, \n  input_rest }\n\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(LoginPage);"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SACSC,cADT,EAESC,cAFT,EAGSC,UAHT,EAISC,YAJT,EAKSC,aALT,QAMmB,eANnB;AAQA,OAAOC,KAAP,MAAkB,gBAAlB;AAEA,OAAO,kBAAP,C,CAGA;;;;AAEA,MAAMC,SAAS,GAAG,YAOK;EAAA,IAPH;IACEN,cADF;IAEEC,cAFF;IAGEC;EAHF,CAOG,uEAHCK,aAGD;EAAA,IAFH;IAAEC;EAAF,CAEG,uEAFSC,WAET;EAEnB,oBAAO;IAAK,SAAS,EAAC,YAAf;IAAA,uBAEH;MAAA,wBACE;QACE,SAAS,EAAC,YADZ;QAEE,QAAQ,EAAIC,KAAD,IAAW;UACpBA,KAAK,CAACC,cAAN,GADoB,CAEpB;;UACAX,cAAc,CAACU,KAAK,CAACE,MAAN,CAAaC,KAAd,CAAd;QAAoC;MALxC;QAAA;QAAA;QAAA;MAAA,SADF,eAWE;QACE,SAAS,EAAC,eADZ;QAEE,QAAQ,EAAIH,KAAD,IAAW;UACpBA,KAAK,CAACC,cAAN;UACAV,cAAc,CAACS,KAAK,CAACE,MAAN,CAAaC,KAAd,CAAd;QAAoC;MAJxC;QAAA;QAAA;QAAA;MAAA,SAXF,eAoBE;QACE,SAAS,EAAC,eADZ;QAEE,OAAO,EAAG,gBAAgBH,KAAhB,EAAsB;UACpBA,KAAK,CAACC,cAAN,GADoB,CAGpB;UACA;;UACAT,UAAU,CAAC;YACRY,SAAS,EAAE,GADH;YAERC,aAAa,EAAE,0CAFP;YAGRC,UAAU,EAAE;UAHJ,CAAD,CAAV;UAKA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,EAA5B;UACAf,YAAY,CAAEgB,SAAS,CAACF,QAAD,CAAX,CAAZ;UACAb,aAAa,CAAE,MAAMgB,YAAY,CAACZ,KAAD,CAApB,CAAb;UAEAa,OAAO,CAACC,GAAR,CAAY,mBAAZ,EAAiCC,SAAjC,EAA4C,yBAA5C;QAED,CAlBb;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,SApBF;IAAA;MAAA;MAAA;MAAA;IAAA;EAFG;IAAA;IAAA;IAAA;EAAA,SAAP;AAiDH,CA1DD;;KAAMjB,S;;AA8DN,MAAMkB,eAAe,GAAIC,KAAD,IAAW;EACjC,MAAM;IAAClB,aAAD;IAAgBE;EAAhB,IAA+BgB,KAArC;EACA,OAAOlB,aAAP;AACD,CAHD,C,CAMA;;;AACA,MAAMmB,kBAAkB,GAAG;EACzB1B,cADyB;EAEzBC,cAFyB;EAGzBC;AAHyB,CAA3B;AAOA,eAAeH,OAAO,CAACyB,eAAD,EAAkBE,kBAAlB,CAAP,CAA6CpB,SAA7C,CAAf"},"metadata":{},"sourceType":"module"}